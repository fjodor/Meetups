---
title: "Quarto"
title-slide-attributes: 
  data-background-image: libs/_Images/2023-05-08-Darmstadt-Quarto.webp
  data-background-position: top
  data-background-size: 32%
  # data-background-opacity: "0.3"
  data-background-color: "#F9F9F9"
institution: "Wolf Riepl Social Science Research"
author: "8. Mai 2023"
format: 
  revealjs:
    theme: default
    highlight-style: a11y
execute:
  echo: false
  eval: true
  freeze: auto
  warning: false
  message: false
callout-appearance: simple
---


## Quarto

```{r}
#| include: false
#| message: false

library(knitr)
library(tidyverse)
library(fontawesome)
Sys.setenv(LANG="en")
# Sys.setenv(LANG="de")
Sys.setlocale("LC_TIME", "en_GB.utf8")
```

### Warum? Houston, wir haben ein Problem!

```{r, out.height = "60%", out.width = "60%", fig.align = 'center'}
knitr::include_graphics("libs/_Images/markdown-houston.png")
```

## Quarto {.smaller}

### Warum? Reproduzierbarkeit von Studien, Datenanalysen

Schätzungen:

- 75% - 90% prä-klinischer Studienergebnisse nicht reproduzierbar
- Kosten für bio-medizinische Firmen in den USA pro Jahr: 28 Mrd. USD

Quelle: Vortrag von Garrett Grolemund, EARL-Konferenz, London

Video: <https://www.youtube.com/watch?v=HVlwNayog-k>

#### Reproduzierbare Ergebnisse dank Quarto!


## Markdown und Quarto

### Word, PDF, Powerpoint, HTML, und mehr!

::: columns
::: {.column width="60%" style="font-size: 1.7rem"}
* Quarto wurde 2022 vorgestellt
* basiert auf Markdown und Pandoc
* Markdown: einfache Auszeichnungssprache („Markup“-Sprache)  
Weitere Markup-Sprachen: HTML, XML  
:::

::: column
```{r quarto-logo, echo = FALSE, out.width = "100%", out.height = "100%", fig.align = "right"}
knitr::include_graphics("libs/_Images/logo-quarto.png")
```
:::
:::

Dokumentation: <https://quarto.org/>


## Quarto vs. R Markdown

::: columns
::: {.column width="65%" style="font-size: 2rem"}
### Quarto

- Command Line Interface (CLI),  
  d. h. separate Software
- Download: <https://quarto.org/docs/get-started/>
- Es gibt ein optionales R-Paket `quarto` von JJ Allaire als Schnittstelle
- Quarto in RStudio eingebettet
:::

::: {.column width="30%" style="font-size: 2rem"}
### R Markdown
- basiert auf R-Paket `rmarkdown` von JJ Allaire, Yihui Xie und vielen anderen
:::
:::

## Quarto: Los geht's

Vorlagen unter *File - New File - Quarto Document*

::: columns
::: {.column width="45%" style="font-size: 1.7rem"}
```{r markdown-vorlage, echo = FALSE, out.width="75%", out.height="75%"}
knitr::include_graphics("libs/_Images/Quarto-Vorlage.png")
```

Ausgabeformat im YAML-Header einstellen:

* format: html
* format: docx

:::

::: {.column width="55%" style="font-size: 1.7rem"}
Weitere Ausgabeformate:  

pdf, OpenOffice (odt), Powerpoint (pptx), epub, MediaWiki, Jupyter, InDesign, ...

In der Kommandozeile:  
`quarto render document.qmd --to html`

In R:
`quarto::quarto_render("document.qmd", output_format = "docx")`

Übersicht über Formate:
<https://quarto.org/docs/output-formats/all-formats.html>
:::
:::

## Quarto: YAML Header {.smaller}

::: columns
::: column
* Enthält Meta-Informationen, z. B. Titel, Autor, Datum, Ausgabeformat
* YAML Ain‘t Markup Language <- Yet Another Markup Language
* Gekennzeichnet mit jeweils drei	`---`	am Anfang des Dokuments
* Grundgerüst kann aus RStudio-Vorlage übernommen und angepasst werden

**Render:** Dokument aus .qmd-Vorlage erstellen
:::

::: column
```{r yaml, echo = FALSE, out.width = "100%", out.height = "100%"}
knitr::include_graphics("libs/_Images/yaml-header-quarto.png")
```
:::
:::

------------------------------------------------------------------------

### Quarto / Markdown: R-Code und Text mischen

```{r R-Text-Code, echo = FALSE, out.width = "100%", out.height = "100%"}
knitr::include_graphics("libs/_Images/Text_R-Code.png")
knitr::include_graphics("libs/_Images/Text_R-Code_Output.png")
```

------------------------------------------------------------------------

### Quarto / Markdown: R-Code und Text mischen

::: columns
::: {.column style="font-size: 1.8rem"}
| Markdown Code                | Ergebnis                                                                |
|-----------------------|-------------------------------------------------|
| *'r R-code'*                 | R-Code in laufenden Text einbetten,<br>z. B. „Die Daten beruhen auf 'r nrow(albums)' Alben.“ |
| \#<br>\##                    | Überschrift 1 <br> Überschrift 2 ... usw.                                       |
| \*Text\*<br>\_Text\_         | *kursiv*                                                               |
| \*\*Text\*\*<br>\_\_Text\_\_ | **fett**                                                                |
:::

::: {.column style="font-size: 1.7rem"}
| Markdown Code                  | Ergebnis        |
|--------------------------------|-----------------|
| \* Punkt 1<br>\* Punkt 2<br> | Nicht nummerierte Liste |
| 1\. Punkt 1<br>2. Punkt 2    | Nummerierte Liste   |

<br>

**Einfach dank visuellem Editor!**

Weitere Formatierungen siehe:

-   <https://rmarkdown.rstudio.com/authoring_basics.html>
-   Markdown Quick Reference in der RStudio-Hilfe

:::
:::

## Quarto: R Codeblock

```{r}
#| label: "diamonds"
#| echo: false
#| eval: false

library(tidyverse)
ggplot(diamonds, aes(x = carat, y = price, color = color)) +
  geom_point() 
```

::: {style="font-size: 1.8rem"}
![](libs/_Images/R-Codeblock-new.png)

* Beginnt mit ```` ```{r} ````
* endet mit ```` ``` ```` 
* Wird von R Studio automatisch grau hinterlegt
* `message: false`: keine Hinweise ausgeben
* `echo: true`: Code im Dokument anzeigen
* `eval: false`: Code nicht ausführen
* Tastaturkürzel: **Strg + Alt + I** fügt Codeblock ein; siehe Schaltfläche

:::

## Chunk-Optionen

Für weitere Chunk-Optionen neben *echo* und *eval* siehe <https://yihui.org/knitr/options/>

* Einstellungen für Grafiken, z. B. fig.width, fig.height

* Caching, d. h. Zwischenspeichern von Codeblöcken für schnellere Ausführung

* Umgang mit Fehlern (anzeigen vs. abbrechen) und Warnungen, Messages (anzeigen vs. unterdrücken)

* Animationen


## Quarto: Vorteile gegenüber RMarkdown

::: incremental
1. Quarto bietet viele Leistungsmerkmale als Standard, die in Markdown nur mit Erweiterungspaketen verfügbar sind.
2. Quarto ist im Kern für multiple Programmiersprachen und Rendering-Technologien ausgelegt.
3. Wechsel-"Kosten" sind vergleichsweise gering: <br>die meisten Markdown-Dokumente und Jupyter Notebooks können von Quarto **ohne Änderungen** direkt gerendert werden.
:::


## 1. Standard-Leistungsmerkmale

Markdown benötigt für diverse Anwendungen zusätzliche R-Pakete:

::: incremental
-   *bookdown* für Bücher
-   *blogdown* für Blogs
-   *distill* für wissenschaftliche Publikationen
-   *xaringan* für ansprechende Präsentationen
-   Querverweise erfordern *bookdown-Formate* wie htmldocument2
-   [***Quarto bietet all das als Standard***]{style="color:green"}
:::


## 2. Multiple Programmiersprachen und Rendering-Technologien

Warum sollte mich das interessieren?

::: columns
::: {.column width="50%"}
![](libs/_Images/quarto-multi-language-njtierney.jpeg)
Quelle: NJ Tierney,  
[*Notes on Changing from Rmarkdown/Bookdown to Quarto,*]{style="font-size:1.8rem"}  
<https://www.njtierney.com/>
:::

::: {.column width="50%" .incremental style="font-size: 2rem"}
- Keine Abhängigkeit von R
- Hohe Wahrscheinlichkeit, dass Quarto zum neuen Standard wird
- R-Programmierer: evtl. früher als erwartet Kollegen, die in anderen Sprachen arbeiten
- Quarto von anderen Sprachen aus leichter nutzbar als Markdown; Aufruf über Kommandozeile
- Unterstützt andere Editoren als RStudio, z. B. JupyterLab, VS Code
:::
:::

## 2. Multiple Programmiersprachen und Rendering-Technologien

Aktuell unterstützte **Rendering-Technologien** *("engines")*

- knitr 
- Jupyter
- Observable

. . . 

Aktuell unterstützte **Programmiersprachen**:

- R, Python, Javascript, Julia
- dafür ausgelegt, mit Sprachen nutzbar zu sein, die es heute noch gar nicht gibt


## 3. Geringe Wechselkosten

- Je nach Ausgabeformat können Anpassungen nötig sein
- Vorteil: Mehr Einheitlichkeit
  + Wechsel zwischen Ausgabeformaten einfacher, z. B. vom Buch zur Webseite oder Präsentation
  + Markdown: `_bookdown.yml`, `_output.yml` etc.
  + Quarto: nur eine `_quarto.yml`

::: notes
- z. B. Präsentationen: Wechsel von xaringan zu revealjs
:::


## Meine Erfahrung & Mehr

::: {.incremental style="font-size: 2rem"}
- Präsentationen: Wechsel von **rmarkdown & xaringan** zu **quarto & revealjs**
- Flexibleres Layout, z. B. einfachere Anpassung von Spaltenbreiten
  + xaringan: .css anpassen
  + quarto & revealjs: `::: {.column width="65%"}`
- Tabsets funktionieren über verschiedene HTML-Formate hinweg <br>(aber nervig beim PDF-Druck)
- Globale Chunk-Optionen einfacher zu setzen
  + RMarkdown: `knitr::opts_chunk$set(echo = FALSE)` in R-Codeblock
  + Quarto: `execute: echo: false` im YAML Header
- Code-Chunks inklusive der Chunk-Optionen im Dokument zeigen: `echo: fenced`
- Neue Features werden eher in Quarto als in RMarkdown implementiert!
:::

::: {.notes}
Was gibt es bisher NICHT in Quarto?


- paged HTML: pagedown für rmarkdown; für Quarto in Planung
- flexdashboard: für Quarto in Planung
- interaktive learnr Tutorials: nicht geplant!
:::


## Material

::: {style="font-size: 2rem"}
- DoKumentation: **Quarto website**   
  <https://quarto.org/>
- **Alison Hill**: We don't talk about Quarto - Until Now!  
  https://www.apreshill.com/blog/2022-04-we-dont-talk-about-quarto/
- **jumping rivers**: I'm an R user: Quarto or R Markdown?  
  https://www.jumpingrivers.com/blog/quarto-rmarkdown-comparison/
- **Nick Tierney**: Notes on Changing from Rmarkdown/Bookdown to Quarto  
  https://www.njtierney.com/post/2022/04/11/rmd-to-qmd/
- **Jim Hester**: it depends 
  https://speakerdeck.com/jimhester/it-depends
- Twitter Thread <https://twitter.com/rstatstips/status/1602406320296034305>

:::


## Mehr Interaktivität: Shiny {.smaller}

::: columns
::: column
* Interaktive App, die auf Nutzereingaben reagiert

* Benötigt R während der Laufzeit:

  + Lokale R-Session *oder*
  + Serverbasierte R-Session (Webseite)

* In Markdown- oder Quarto-Dokumente einbetten oder als alleinstehende App
  
Shiny lernen:

  + RStudio-Webseiten: <https://shiny.rstudio.com/>
  + Buch von Hadley Wickham: <br>[Mastering Shiny](https://mastering-shiny.org/)

:::

::: column
```{r, echo = FALSE, out.width = "70%", out.height = "70%"}
knitr::include_graphics("libs/_Images/cover-mastering-shiny.png")
```
:::
:::

## Literatur: Markdown vs. Quarto {.smaller}

::: columns
::: {.column width="55%"}

```{r Markdown-book}
#| echo: false
#| fig.show: hold
#| out.width: "12%"
#| out.height: "12%"
#| layout-ncol: 2

# out.extra: 'style="border:10px solid white;"'

knitr::include_graphics("libs/_Images/cover-markdown.png")
knitr::include_graphics("libs/_Images/cover-R4DS.png")
```

**Quarto: <https://quarto.org/>**

:::


::: {.column width="45%"}

Beide Bücher sind online kostenlos lesbar

* [R Markdown: The Definitive Guide](https://bookdown.org/yihui/rmarkdown/)
* [R for Data Science](https://r4ds.had.co.nz/index.html)
	Kap. 27, 29, 30


Hilfe in RStudio

* Help – Markdown Quick Reference
* Help – Cheatsheets:  
  + R Markdown Cheat Sheet  
  + R Markdown Reference Guide

:::
:::


## Bookdown - Bücher direkt aus R {.smaller}

::: columns
::: {.column width="60%"}

* ***Neu: wird von Quarto abgedeckt, ohne Erweiterungspakete!***

::: {style="font-size: 1.7rem"}
* R-Paket von **Yihui Xie** (knitr, animation)

* Grundlage: Markdown
* Dynamische Bearbeitung
* Flexible Outputs, z. B. PDF auf Knopfdruck
* Einfachere Auszeichnungssprache als LaTeX
* Online-Veröffentlichung, z. B. auf GitHub, bookdown.org, beliebiger Webserver
* Online-Veröffentlichung ermöglicht interaktive Inhalte:  
Shiny-Apps, HTML-Widgets, Animationen
:::

<https://bookdown.org/>

:::

::: {.column width="40%"}

```{r bookdown, echo = FALSE, out.width = "90%", out.height = "90%"}
knitr::include_graphics("libs/_Images/cover-bookdown.jpg", )
```

:::
:::


## Blogdown - Websites / Blogs {.smaller}

::: columns
::: {.column width="60%"}

* ***Neu: wird von Quarto abgedeckt, ohne Erweiterungspakete!***

* R-Paket von **Yihui Xie** (knitr, animation)

* Erzeugt statische Webseite:
  + HTML, CSS, JavaScript, Bilder, ...
  + Kein PHP, keine Datenbank, keine serverbasierte R-Installation erforderlich

* Grundlage: Markdown
  + Dynamische Bearbeitung
  + Flexible Outputs, z. B. PDF, Buch, etc.
  
<https://bookdown.org/yihui/blogdown/>
:::

::: {.column width="40%"}
```{r blogdown, echo = FALSE, out.width = "100%", out.height = "100%"}
knitr::include_graphics("libs/_Images/cover-blogdown.png", )
```

:::
:::


## Jupyter und Quarto

* Quarto kann Jupyter Notebooks rendern
  + als "normales" Notebook: **`.ipynb`**
  + als Text: **`.qmd`**

Jupyter Lab starten aus Shell:

* Windows: `py -m jupyter lab`
* Mac / Linux: `python3 -m jupyter lab`

Details siehe <https://quarto.org/docs/tools/jupyter-lab.html>


##  Jupyter und Quarto

Formate in Quarto Kommandozeile umwandeln:

* Von .ipynb zu .qmd:  
  `quarto convert basics-jupyter.ipynb`
  
* Von .qmd zu .ipynb:  
  `quarto convert basics-jupyter.qmd`
  

## Jupyter: .ipynb {.smaller}

::: columns
::: column

```{r}
include_graphics("libs/_Images/quarto-jupyter-ipynb.png")
```

:::

::: column
* Kommandozeile: <br>`quarto preview notebook.ipynb`
* Browserfenster mit Live-Vorschau öffnet sich
* Automatisches Update bei jedem Speichern
* Ausgabeformat: <br>`quarto preview notebook.ipynb --to pdf`

:::
:::


## Jupyter: .ipynb {.smaller}

* Rendern:  
  `quarto render notebook.ipynb`

* Rendern zu bestimmtem Format:  
  `quarto render notebook.ipynb --to docx`
  
* Achtung: Beim Rendern werden die Zellen (Codeblöcke) **nicht automatisch** ausgeführt!  
  + `quarto render notebook.ipynb --execute`
  + YAML-Kopf:

```{r, eval = FALSE, echo = TRUE}
---
title: "My Notebook"
execute: 
  enabled: true
---
```


## Jupyter: .qmd {.smaller}

::: columns
::: column

```{r}
#| out.width: 150%
#| out.height: 150%

include_graphics("libs/_Images/quarto-jupyter-text.png")
```

:::

::: column
* YAML-Kopf: <br> `jupyter: python3`

* Rendern: <br> `quarto render basics-jupyter.qmd`

:::
:::


## Danke! {.smaller}

::: columns
::: column

```{r, echo = FALSE, fig.align = "center", out.width = "100%", out.height = "100%"}
include_graphics("libs/_Images/2023-05-08-Darmstadt-Quarto.webp")
```

::: {.style="font-color:blue"} 
**Wolf Riepl  
Active on LinkedIn  
<https://statistik-dresden.de/>**  
:::
:::

::: column
```{r, echo = FALSE, fig.align = "center", out.width = "78%", out.height = "78%"}
include_graphics("libs/_Images/coffee.jpg")
```

::: {.style="align:right"}
**Youtube: StatistikinDD  
Twitter: @StatistikInDD  
https://www.facebook.com/statistikdresden**
:::
:::
:::
